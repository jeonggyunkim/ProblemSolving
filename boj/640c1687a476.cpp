#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

char board[7][66];

char num[10][7][7] = {
	{"000000", "001100", "010010", "010010", "010010", "001100", "000000"},
	{"000000", "000100", "001100", "000100", "000100", "000100", "000000"},
	{"000000", "011110", "000010", "011110", "010000", "011110", "000000"},
	{"000000", "011100", "000010", "000100", "000010", "011100", "000000"},
	{"000000", "000100", "001100", "010100", "111110", "000100", "000000"},
	{"000000", "011110", "010000", "011100", "000010", "010010", "001100"},
	{"000000", "010000", "010000", "011110", "010010", "011110", "000000"},
	{"000000", "011110", "000010", "000100", "000100", "000100", "000000"},
	{"000000", "011110", "010010", "011110", "010010", "011110", "000000"},
	{"011110", "010010", "010010", "011110", "000010", "000010", "000010"},
};

int number(int i) {
	for (int k = 0; k < 10; ++k) {
		bool b = 1;
		for (int x = 0; x < 7; ++x) {
			for (int y = 0; y < 6; ++y) {
				if (board[x][i + y] != num[k][x][y]) b = 0;
			}
		}
		if (b) return k;
	}

}

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);

	int n;
	for (int i = 0; i < 7; ++i) cin >> board[i];
	while (board[0][n]) n++;
	n /= 6;

	vector<int> arr;
	for (int i = 0; i < 6 * n; i += 6) {
		arr.push_back(number(i));
	}
	if (next_permutation(arr.begin(), arr.end())) {
		char ans[7][66] = {};
		for (int k = 0; k < n; ++k) {
			for (int i = 0; i < 7; ++i) {
				for (int j = 0; j < 6; ++j) {
					ans[i][6 * k + j] = num[arr[k]][i][j];
				}
			}
		}
		for (int i = 0; i < 7; ++i) cout << ans[i] << '\n';
	}
	else cout << "The End";
}
